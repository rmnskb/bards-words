name: Docker Build and Publish

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      api-changed: ${{ steps.changes.outputs.api }}
      frontend-changed: ${{ steps.changes.outputs.frontend }}
      spark-changed: ${{ steps.changes.outputs.spark }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for changes
        id: changes
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)

          echo "Changed files: $CHANGED_FILES"

          API_CHANGED="false"
          FRONTEND_CHANGED="false"
          SPARK_CHANGED="false"

          if echo "$CHANGED_FILES" | grep -q "^api/"; then
            API_CHANGED="true"
            echo "API changes detected"
          fi

          if echo "$CHANGED_FILES" | grep -q "^frontend/"; then
            FRONTEND_CHANGED="true"
            echo "Frontend changes detected"
          fi

          if echo "$CHANGED_FILES" | grep -q "^spark/"; then
            SPARK_CHANGED="true"
            echo "Spark changes detected"
          fi

          echo "api=$API_CHANGED" >> $GITHUB_OUTPUT
          echo "frontend=$FRONTEND_CHANGED" >> $GITHUB_OUTPUT
          echo "spark=$SPARK_CHANGED" >> $GITHUB_OUTPUT

  build-api:
    name: "Build API"
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.api-changed == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./api
          file: ./api/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/bards-words-api:latest

  build-frontend:
    name: "Build Frontend"
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend-changed == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/bards-words-frontend:latest

  build-spark:
    name: "Build Spark"
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.spark-changed == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./spark
          file: ./spark/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/bards-words-spark:latest

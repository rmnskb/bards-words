services:
  spark-master:
    # Access running Spark master: docker exec -it spark-master bash
    container_name: spark-master
    build:
      context: ./spark
      dockerfile: Dockerfile
    image: spark-image
    entrypoint: [ './entrypoint.sh', 'master' ]
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 5s
      timeout: 3s
      retries: 3
    volumes:
      - ./scripts:/opt/spark/scripts
      - spark-logs:/opt/spark/spark-events
    env_file:
      - ./spark/.env.spark
      - .env
    environment:
      DB_ETL_USER: ${DB_ETL_USER}
      DB_ETL_PWD: ${DB_ETL_PWD}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
    ports:
      - '8080:8080'
      - '7077:7077'
    networks:
      - web-spark-ntwrk

  spark-worker:
    container_name: spark-worker
    image: spark-image
    entrypoint: [ './entrypoint.sh', 'worker' ]
    depends_on:
      - spark-master
    env_file:
      - ./spark/.env.spark
      - .env
    environment:
      DB_ETL_USER: ${DB_ETL_USER}
      DB_ETL_PWD: ${DB_ETL_PWD}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
    volumes:
      - ./scripts:/opt/spark/scripts
      - spark-logs:/opt/spark/spark-events
    networks:
      - web-spark-ntwrk

volumes:
  spark-logs:

networks:
  web-spark-ntwrk:
    external: true
    name: web-spark-ntwrk

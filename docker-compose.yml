services:
  mongodb:
    # Access mongosh from inside the container: docker exec -it mongodb mongosh
    container_name: mongodb
    image: mongo:8.0.6
    env_file: .env
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - "./db:/data/db:rw"
    networks:
      - web-spark-ntwrk

  fast-api:
    container_name: fast-api
    build:
      context: ./api
      dockerfile: Dockerfile
    env_file: .env
    environment:
      DB_API_USER: ${DB_API_USER}
      DB_API_PWD: ${DB_API_PWD}
    volumes:
      - ./api:/api
    expose:
      - "80"
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/api/v1/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - web-spark-ntwrk

  react-ts:
    container_name: react-ts
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    expose:
      - "3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
    depends_on:
      fast-api:
        condition: service_healthy
    networks:
      - web-spark-ntwrk

  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      react-ts:
        condition: service_healthy
      fast-api:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - web-spark-ntwrk

volumes:
  db:
    driver: local
    name: db

networks:
  web-spark-ntwrk:
    name: web-spark-ntwrk
    driver: bridge
